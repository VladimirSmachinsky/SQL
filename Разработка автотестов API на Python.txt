Тестирование функций и ключевое слово assert
Чтобы узнать, правильный ли результат возвращает функция, можно вывести значение на экран и проверить, что ответ верный. 
Но удобнее сделать эту проверку автоматической. Здесь пригодится ключевое слово assert (англ. «утверждать»). Оно работает как логическое выражение: возвращает True или False. Например, если сумма чисел правда 6, вернёт True, а иначе — False.
Как использовать assert
Представь, что проверяешь калькулятор: нужно убедиться, что он правильно складывает однозначные целые числа. 
Сначала предстоит создать тест-кейс с шагами воспроизведения.
Калькулятор правильно складывает однозначные целые числа
Шаги:
Ввести 5.
Нажать +.
Ввести 6.
Нажать =.
ОР: 
Результат сложения — 11.
Чтобы автоматизировать такой тест-кейс, нужно последовательно проходить по шагам и переводить их в код. А в конце — проверить, что результат действительно равен 11. 
Для этого можно включить в автотест выражение assert. Ещё понадобится оператор сравнения ==. Получится вот так:
https://code.s3.yandex.net/qa/schemes/assert.png
Тут ты как будто говоришь: «Проверь, что результат равен 11».
Если утверждение верно, тест пройден, программа продолжит работу.

Assert и арифметические операторы
С assert можно использовать разные операторы: не только ==, но и !=, >, < и некоторые другие. Они помогают писать разные проверки.
Например, нужно проверить, что баланс больше нуля. Понадобится оператор >:
def test_deposit_more_than_zero():
    
    deposit = get_user_deposit()  # получение данных из базы и сохранение их в переменную
        assert deposit > 0   # проверка, что баланс пользователя больше 0 

Задание
Допиши две проверки: для строчной буквы y и произвольного символа — заглавной буквы N. Сообщения об ошибках используй такие: 
«y — это символ согласия, функция должна вернуть True»;
«это не похоже на Y или y, функция должна вернуть False».

1 def check_answer(letter):
2 if (letter == "Y"):
3 return True
4 if (letter == "y"):
5  return True
6 return False
7 assert check_answer("Y") == True, "Y — это символ согласия, функция должна вернуть True"
8. assert check_answer("y") == True, "y — это символ согласия, функция должна вернуть True"
10. assert check_answer("N") == False, "это не похоже на Y или y, функция должна вернуть False"



